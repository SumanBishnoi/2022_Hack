
/*class Node
{
    int data;
    Node left,right;
    Node(int d)
    {
        data=d;
        left=right=null;
    }
}*/

class GFG
{
    void tra(Node root,ArrayList<Integer>list){
            if(root==null)return;
            Stack<Node> s1=new Stack<Node>();
            Stack<Node> s2=new Stack<Node>();
            s1.push(root);
            while(s1.empty()==false || s2.empty()==false){
                while(s1.empty()==false){
                    Node temp=s1.pop();
                    list.add(temp.data);
                     if(temp.left!=null){
                        s2.push(temp.left);
                    }
                    if(temp.right!=null){
                        s2.push(temp.right);
                    }
                   
                }
                while(s2.empty()==false){
                    Node temp=s2.pop();
                    list.add(temp.data);
                    
                    if(temp.right!=null){
                        s1.push(temp.right);
                    }
                    if(temp.left!=null){
                        s1.push(temp.left);
                    }
                }
            }
    }
    
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	    ArrayList<Integer> list = new ArrayList<Integer>();
	    tra(root,list);
	    return list;
	}
}
